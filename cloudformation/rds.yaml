AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  Prefix:
    Type: String
    Default: ns
  ProjectName:
    Type: String
    Default: test
  Environment:
    Type: String
    Default: dev
  DatabaseName:
    Type: String
  VPCId:
    Type: String
  VPCPrivateSubnetIds:
    Type: List<String>
  RDSClusterSecurityGroup :
    Type: String
#  RDSProxySecurityGroup:
#    Type: String
Resources:
  RDSClusterParameterGroup:
    Type: AWS::RDS::DBClusterParameterGroup
    Properties:
      DBClusterParameterGroupName: !Sub "${Prefix}-${ProjectName}-${Environment}-rds-cluster-pg"
      Family: aurora-postgresql13
      Description: "RDS default cluster parameter group"
      Tags:
        - Key: Name
          Value: !Sub "${Prefix}-${ProjectName}-${Environment}-rds-cluster-pg"
  DBParameterGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      DBParameterGroupName: !Sub "${Prefix}-${ProjectName}-${Environment}-db-parameter-group"
      Family: aurora-postgresql13
      Tags:
        - Key: Name
          Value: !Sub "${Prefix}-${ProjectName}-${Environment}-db-parameter-group"
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupName: !Sub "${Prefix}-${ProjectName}-${Environment}-db-subnet-group"
      SubnetIds: !Ref VPCPrivateSubnetIds
      Tags:
        - Key: Name
          Value: !Sub "${Prefix}-${ProjectName}-${Environment}-db-subnet-group"
  RDSCluster:
    Type: AWS::RDS::DBCluster
    Properties:
      AllowMajorVersionUpgrade: true
      ApplyImmediately: true
      BackupRetentionPeriod: 7
      DBClusterIdentifier: !Sub "${Prefix}-${ProjectName}-${Environment}-aurora-postgresql-cluster"
      DatabaseName: !Ref DatabaseName
      DBClusterParameterGroupName: !Ref RDSClusterParameterGroup
      DeletionProtection: false
      Engine: aurora-postgresql
      EngineMode: provisioned
      EngineVersion: "13.8"
      MasterUsername: !Sub "${Environment}_master_user"
      MasterUserPassword: "admin123"
      Port: 5432
      PreferredBackupWindow: "17:00-18:00"
      PreferredMaintenanceWindow: "sat:18:00-sat:19:00"
      SkipFinalSnapshot: true
      StorageEncrypted: true
      DBSubnetGroupName: !Ref DBSubnetGroup
      VpcSecurityGroupIds:
        - !GetAtt [RDSClusterSecurityGroup, GroupId]
      Tags:
        - Key: Name
          Value: !Sub "${Prefix}-${ProjectName}-${Environment}-aurora-postgresql-cluster"
  RDSInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBClusterIdentifier: !Ref RDSCluster
      DBInstanceIdentifier: !Sub "${Prefix}-${ProjectName}-${Environment}-rds-cluster-instance"
      DBParameterGroupName: !Ref DBParameterGroup
      Engine: aurora-postgresql
      EngineVersion: "13.8"
      InstanceClass: db.t4g.medium
      Tags:
        - Key: Name
          Value: !Sub "${Prefix}-${ProjectName}-${Environment}-rds-cluster-instance"
#  RDSProxy:
#    Type: AWS::RDS::DBProxy
#    Properties:
#      DBProxyName: !Sub "${Prefix}-${ProjectName}-${Environment}-db-proxy"
#      EngineFamily: POSTGRESQL
#      IdleClientTimeout: 1800
#      RequireTLS: false
#      RoleArn: !GetAtt [YourProxyRole, Arn]  # TODO Replace with your proxy role
#      VpcSecurityGroupIds:
#        - !GetAtt [RDSProxySecurityGroup, GroupId]
#      VpcSubnetIds: !Ref VPCPrivateSubnetIds
#      Auth:
#        AuthScheme: SECRETS
#        IAMAuth: DISABLED
#        SecretArn: !GetAtt [YourSecretsManagerSecret, Arn]  # TODO Replace with your Secrets Manager secret
#      Tags:
#        - Key: Name
#          Value: !Sub "${Prefix}-${ProjectName}-${Environment}-db-proxy"
#  RDSProxyTargetGroup:
#    Type: AWS::RDS::DBProxyTargetGroup
#    Properties:
#      DBProxyName: !Ref RDSProxy
#      TargetGroupName: !Sub "${Prefix}-${ProjectName}-${Environment}-default-target-group"
#      ConnectionPoolConfig:
#        ConnectionBorrowTimeout: 120
#        MaxConnectionsPercent: 100
#        MaxIdleConnectionsPercent: 50
